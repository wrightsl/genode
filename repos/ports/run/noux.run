build { noux lib/libc_noux }

create_boot_directory

import_from_depot [depot_user]/src/[base_src] \
                  [depot_user]/src/init \
                  [depot_user]/src/coreutils \

install_config {
	<config verbose="yes">
		<parent-provides>
			<service name="ROM"/>
			<service name="LOG"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="PD"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="IO_PORT"/>
		</parent-provides>
		<default-route>
			<any-service> <any-child/> <parent/> </any-service>
		</default-route>
		<default caps="100"/>
		<start name="timer">
			<resource name="RAM" quantum="1M"/>
			<provides><service name="Timer"/></provides>
		</start>
		<start name="noux" caps="500">
			<resource name="RAM" quantum="1G"/>
			<config verbose="yes" stdin="/null" stdout="/log" stderr="/log">
				<fstab> <null/> <log/> <tar name="coreutils.tar" /> </fstab>
				<start name="/bin/ls"> <arg value="-Rla"/> </start>
			</config>
		</start>
	</config>
}

build_boot_image {
	noux libc.lib.so vfs.lib.so libm.lib.so
	libc_noux.lib.so posix.lib.so
}

append qemu_args " -nographic -serial mon:stdio "

run_genode_until {child "noux" exited with exit value 0.*\n} 30
